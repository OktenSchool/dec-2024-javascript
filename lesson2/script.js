/*
1
Завдання про масив юзерів з ім'ям та паролем.
Спочатку створила масив зі змінними: users = [user1, user2, user3...];
Потім прописала кожного юзера як об'єкт з потрібними значеннями.
Потім запросила вивести в консоль, але показало, що user1 не знайдено.
Помістила масив після об'єктів - знайшло. Тут послідовність має таке критичне значення?
*/
//
// let user1 = {name: 'Ivan', age: 16}
// let user2 = {name: 'Maryna', age: 16}
//
// const users = [user1, user2]
// let users1 = [user1, user2]
//
//
// console.log(users)

/*
2
Чи можна створити об'єкт який ідентичний якомусь іншому але не посилається на нього?

*/
//
let user1 = {name: 'Ivan', age: 16}

let user2 = {...user1}
let user3  = JSON.parse(JSON.stringify(user1));

let user4 = {name: 'Halyna', age: 20}
let users1 = [user1, user2, user3, user4]

user2.age = 32;

console.log(users1)
//
// //Та наскільки часто зустрічається/використовується тернарний оператор? Як на мене його доволі таки важки читати
//
// const age = 28;
//
// const status = age >= 18
//     ? "Adult"
//     : "Minor";
//
// console.log(status)

/*
3
Поясніть будь ласка різницю між масивами та об'єктами, бо у відео лекції Ви сказали що по суті масив
 це теж об'єкт і typeof це покаже. Чи можна заміняти масиви об'єктами? Бо поки що об'єкти здаються більш
структурованими і інформативним(бо мають ключі і значення) ніж масив.
*/

//  let user1 = {id: 1, name: 'Ivan', age: 16}
//  let user2 = {id: 2, name: 'Maryna', age: 16}
//
// let users1 = [user1, user2]


/*
4
Вітаю! При використанні логічних розгалужень чи є якась "норма" скільки
If ми можемо вкладати один в одний? І чи впливають такі багаторівневі вкладення на читання коду?
*/

/*
5
Чи хороша практика / чи завжди хороша практика використовувати ternary? У відео з роз'язком ДЗ його не використовували, а я застосувала у
таску 6: console.log(x !== 0 ? 'Вірно' : 'Невірно');
і таску 10:
Ніби виглядає коротше, але може не дуже читаємий код виходить, чи ще якісь підводні камені є.
*/
// const  x = 1;
// console.log(x !== 0 ? 'Вірно' : 'Невірно');
//
// console.log(`${n1 > n2 ? n1 : n2} is max in (${n1}, ${n2})`);

/*
6
Я переглянув відео з відповідями і там на початку є помилка. В '' без пробілу
 то воно перетворює в default, а помилки полягає в тому що якщо перебирати хибні рішення і в ' ' шось є то всеодно виводиться default а не те шо в лапках
*/

/*
7
Чому при задаванні змінной як стрінг код все одно нормально функціонує при порівнянні чисел? Додав git
*/
// let time = '59'; //String
//
// if (0 <= time && time <= 15){
//     console.log('Перша чверть');
// } else if (15 < time && time <= 30){
//     console.log('Друга чверть');
// } else if (30 < time && time <= 45){
//     console.log('Третя чверть');
// } else if (45 < time && time <= 59) {
//     console.log('Четверта чверть');
// }else{
//     console.log('PROBLEM!')
// }

//'==' - порівнювати значення
//'===' - порівнювати ще й тип - який ви вже зазначили


/*
8
1. Чи є різниця писати +'123' або parseInt('123')? Чи під капотом + викликається той самий parseInt? Чи якийсь з методів кращий?
*/
// +'123px123' = Nan;
//
// parseInt('123px123') = 123;

/*
2. В switch можна якось задавати діапазон значень? Щось типу:
case 1..3: // якісь дії
або хоча б
case 1, 2, 3: // якісь дії
чи лише так:
case 1:
case 2:
case 3: // якісь дії
*/
// if(true){
//
//
// }
//
//
// switch (true){
//
//     case 1:
//     case 2:
//     case 3:
//         console.log(true)
// }

    /*
9
Коли ми доступаємось до ключа об'єкта через [ ] чому обов'язково прописувати значення саме в лапках?

Наприклад person["age" ] a не person[age] і яка різниця між таким способом запису та

person.age?

*/

let person = {id: 1, name: 'Ivan', age: 16, 16:'qwe'}

console.log(person["age"])
console.log(person.id);


const user6 = { name: "Alice", password: "pass123", settings: { theme: "dark" } };
const user7 = JSON
    .parse(JSON
        .stringify(user1));

/*


Також питання яке проговрювали сьогодні, я правильно зрозуміла, коли в нас є масив з об'єктів то,
 ніякі імена об'єктам ми не даємо, а лише записуємо фігурні дужки через кому в масиві:
  [{age:5},{age:7},{age:8}]?
10
Привіт, в питанні 10,11 та12 не можу зрозуміти як перевірити чи все працює в консолі
11

Чи можна було завдання з falsy значеннями робити через промпт?
*/
// let x1 = prompt('Enter x1:');
//
// // Якщо x1 є falsy значенням, то встановлюємо значення за замовчуванням
// if (!x1) {
//     x1 = 'default';
// }
//
// console.log(x1);

/*
Чому не працює такий код?
    /*
*/


/*
Якщо у мене є масив arr [1, 2, 'f', NaN] як мені отримати з нього тільки числа, водночас я не
знаю порядок елементів у масиві, тому що дані надходять із сайту і може прийти такийпорядок arr[f,2,NaN,1]
*/

// console.log('---------------------')
//
//  let z = NaN;if ( z == false) {
//      z = 'default'; console.log(z);
//  }else { console.log(z);}
//
// let a = 'name'
// let b = {name: 'Alex', age: 42};
//  console.log(b[a]);



